////////////////////////////////////////////////////////////////
// ____\\\\////----%%%%====%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// >____\\\\////----%%%%====%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// >>____\\\\////----%%%%====%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// >>>____\\\\////----%%%%====%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// >>>>____\\\\/             ==%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// %>>>>____\\\\ ///-- -%%%% ===%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// %%>>>>____\\\             ====%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// %%%>>>>____\\ \//// ---%% %====%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// %%%%>>>>____\             %%====%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// %%%%%>>>>____\\\\////----%%%%====%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// %%%%%%>>>>___             %%%%====%%%%%%%%%%%%%%%%%%%%%%%%%//
// %%%%%%%>>>>____\\\\ ///-- -%%%%====%%%%%%%%%%%%%%%%%%%%%%////
// %%%%%%%%>>>>____\\ \////- --%%%%====%%%%%%%%%%%%%%%%%%%//////
// %%%%%%%%%>>>>____ \\\//// ---%%%%====%%%%%%%%%%%%%%%%////////
// %%%%%%%%%%>>>>_  _\\\\/// ----%%%%====%%%%%%%%%%%%%//////////
// %%%%%%%%%%%>>  ____\\\   //----%%%%====%%%%%%%%%%////////////
// %%%%%%%%%%%%>>>>____\\\\////----%%%%====%%%%%%%%///////////%%
// %%%%%%%%%%%%%>>>>____\\\\////----%%%%====%%%%%%%%////////%%%%
// %%%%%%%%%%%%%%>>>>____\\\\////----%%%%====%%%%%%%%/////%%%%%%
// %%%%%%%%%%%%%%%>>>>____\\\\////----%%%%====%%%%%%%%//%%%%%%%%
// %%%%%%%%%%%%%%%%>>>>____\\\\////----%%%%====%%%%%%%%%%%%%%%%%
// %%%%%%%%%%%%%%%%%>>>>____\\\\////----%%%%====%%%%%%%%%%%%%%%%
// %%%%%%%%%%%%%%%%%%>>>>____\\\\////----%%%%====%%%%%%%%%%%%%%%
// %%%% m a l e %%%%%%>>>>____\\\\////----%%%%====%%%%%%%%%%%%%%
// %%%%%%%%%%%%%%%%%%%%>>>>____\\\\////----%%%%====%%%%%%%%%%%%%
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// 男、おとこ
////////////////////////////////////////////////////////////////
// Modify Linked List-1
////////////////////////////////////////////////////////////////
// Given a singly linked list containing N nodes. Modify the Linked
// list as follows:
////////////////////////////////////////////////////////////////
// 1. Modify the value of the first half nodes such that 1st node's
// new value is equal to the value of the last node minus the first
// node's current value, 2nd node's new value is equal to the second
// last nodes value minus 2nd nodes current value, likewise for first
// half nodes.  
// 2. Replace the second half of nodes with the initial values of the
// first half nodes(values before modifying the nodes).
// 3. If N is odd then the value of the middle node remains unchanged.
////////////////////////////////////////////////////////////////
// Input: N = 5, linked list = 10 -> 4 -> 5 -> 3 -> 6
// Output: -4 -1 5 4 10
// Explanation: ...
////////////////////////////////////////////////////////////////
// Expected Time Complexity: O(N)
// Expected Auxiliary Space: O(1)
////////////////////////////////////////////////////////////////
// 1 <= N <= 10^5
// -10^5  <= Node->data <= 10^5
////////////////////////////////////////////////////////////////
using namespace std;
////////////////////////////////////////////////////////////////
#include <iostream>
////////////////////////////////////////////////////////////////
struct Node{int data;struct Node*next;Node(int x){data=x;next=NULL;
}};
////////////////////////////////////////////////////////////////
void print(Node*head){Node*temp=head;while(temp){cout<<temp->data
<<" ";temp=temp->next;}cout<<endl;}
////////////////////////////////////////////////////////////////
class Solution{public:struct Node*modifyTheList(struct Node *head);
};
////////////////////////////////////////////////////////////////
// B A e F n d L s d K u F v d K e v R
// e u i i a e e p i e n e o e ö i o o
// i f n g c m b i e n d s n n r n r l
// m b e u h   e l   n   t     p e r l
//   a r r     n e   t   l     e   a e
//   u           n   n   e     r   n .
//                   i   g     v   g
//                   s   u     e   i
//                   s   n     r   g
//                   e   g     h   e
//                       e     ä
//                       n     l
//                             t
////////////////////////////// n ///////////////////////////////
////////////////////////////// i ///////////////////////////////
////////////////////////////// s ///////////////////////////////
////////////////////////////// s ///////////////////////////////
//                             e
//                             n
// oo
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
Node* revs( Node* c ){
    Node *n, *p{};
    do {
        n = c->next;
        c->next = p;
        p = c;
        c = n;
    } while( n );
    return p;
}
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
Node* half( Node* f ){
    Node* b{ f };
    while(( f = f->next ) and ( f = f->next )){
        b = b->next;
    }
    return b;
}
////////////////////////////////////////////////////////////////
// die Familie                                            family
// der Großvater                                     grandfather
// die Großmutter                                    grandmother
// der Vater                                              father
// die Mutter                                             mother
// der Onkel                                               uncle
// die Tante                                                aunt
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
Node* Solution::modifyTheList( Node* p ){
    auto m{ half( p )};
    m->next = revs( m->next );
    auto l{ p }, r{ m->next };
    while( r ){
        int t{ l->data };
        l->data = r->data - l->data;
        r->data = t;
        l = l->next;
        r = r->next;
    }
    m->next = revs( m->next );
    return p;
}
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Ｑ：いま　なんじですか。
// １．０５：００ PM ごご　ごじです。
// ２．０９：００ AM ごぜん　きゅうじです。
// ３．１２：３０ PM ごご　じゅうにじはんです。
// ４．０４：３０ AM ごぜん　よじはんです。
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// this one ( kore ) これ
// that one ( sore ) それ
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
int main(){int t;cin>>t;while(t--){int n;cin>>n;struct Node*head
=NULL,*temp=NULL;while(n--){int a;cin>>a;Node*newNode=new Node(a);
if(head==NULL)head=newNode;else temp->next=newNode;temp=newNode;}
Solution obj;head=obj.modifyTheList(head);print(head);}}
////////////////////////////////////////////////////////////////
// Test Cases Passed:                                  222 / 222
// Total Points Scored:                                    4 / 4
// Your Total Score:                                        1402
// Total Time Taken:                                        0.08
