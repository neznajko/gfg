//012345678901234567890123456789012345678901234567890123     
//          1         2         3         4         5   0
//   888888888888888888888888888888888888888888888888   1
//   888888888888888888888888888888888888888888888888   2
//   88888888888888888888888888888888888 LIFE 8888888   3
//   888888888888888888888888888888888888888888888888   4
//   888888888888888888888888888888888888888888888888   5
//   888888888888888888888888888888888888888888888888   6
//   888888888888888888888888888888888888888888888888   7
//   8888888                                  8888888   8
//   8888888                                  8888888   9
//   8888888     888888  ^^^^^^^^             8888888 1 0
//   8888888    888\\\\\\^^^^^^^^\\\\\\       8888888   1
//   8888888   8888\\\\\\^^^^^^^^\\\\\\       8888888   2
//   8888888  888888     ^^^^^^^^             8888888   3
//   8888888        ==================        8888888   4
//   8888888        ==================        8888888   5
//   8888888             ^^^^^^^^             8888888   6
//   8888888    --------------------------    8888888   7
//   8888888    --------------------------    8888888   8
//   8888888             ^^^^^^^^             8888888   9
//   8888888                                  8888888 2 0
//   888888888888888888888888888888888888888888888888   1
//   888888888888888888888888888888888888888888888888   2
//   888888888888888888888888888888888888888888888888   3
//   888888888888888888888888888888888888888888888888   4
//   888888888888888888888888888888888888888888888888   5
//   888888888888888888888888888888888888888888888888   6
//   888888888888888888888888888888888888888888888888   7
////////////////////////////////////////////////////////
// Count Binary Strings With No Consecutive 1s, 生、なま
////////////////////////////////////////////////////////
// Given an integer N. Your task is to find the number
// of binary strings of length N having no consecutive
// 1s. As the number can be large, return the answer
// modulo 10^9+7.
////////////////////////////////////////////////////////
// Input: N = 3, Output: 5
// Explanation: All the binary strings of length 3
// having no consecutive 1s are "000", "001", "101",
// "100" and "010".
////////////////////////////////////////////////////////
// Expected Time Complexity: O(logN)
// Expected Auxiliary Space: O(logN)
////////////////////////////////////////////////////////
// 1 ≤ N ≤ 10^18
////////////////////////////////////////////////////////
// Aus der Tatsache der Gliederung in Körperviertel laßt
// FRO THE FACT     THE STRUCTURE  IN BODY QUARTER  LET
//   M
// sich folgern: Eine auf dem stuhl sitzende verringert
// ITSE TO DEDU  A    ON  THE CHAIR SITTING  TO REDUCE
//   FL      EC
// ihre Körperhöhe um ein Viertel ..
// HER  BODY HEIGH AR A   QUARTER
//               T UO
//                 ND 
//                                                    ok
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
using namespace std;
///////////////////////////////////////////////////////_
# include <iostream>
# include <unordered_map>
//////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////
// Mum is offering Stefan more chips.                 ///
// :] Möchtest du noch Pommes frites?                ///
//////////////////////////////////////////////////////////
// He says "yes please" and that he likes chips.      ///
// :) Ja, bitte. Ich mag Pommes frites.              ///
//////////////////////////////////////////////////////////
// Then he says "No thanks", he's had enough.         ///
// 8t Nein, danke. Das reicht.                       ///
//////////////////////////////////////////////////////////
// Boris is saying the food is delicious.             ///
// :* Es schmeckt sehr gut.                          ///
typedef long long i64;                              ///
//////////////////////////////////////////////////////
// g(n) - number of binary strings of lenght n having
// no consecutive 1s.
// g(0) = 1
// g(1) = 2
// g(2) = 3
// g(n) = g(j)g(n-j-1) + g(j-1)g(n-j-2), j = n/2, n > 3
////////////////////////////////////////////////////////
// j <- n/2
// +---+---+---+---+-------+---+-------+---+---+---+
// | 0 | 1 | 2 | 3 |  ...  | j |  ...  |n-3|n-2|n-1| n
// +---+---+---+---+-------+---+-------+---+---+---+
// ----------> j <----------   ------> n-j-1 <------
// a) binstr[j] = 0
//    g_a(n) = g(j)g(n-j-1)
// b) binstr[j] = 1, set binstr[j±1] to 0
//    g_b(n) = g(j-1)g(n-j-2)
//
// g(n) = g_a(n) + g_b(n) = 
//      = g(j)g(n-j-1) + g(j-1)g(n-j-2)
////////////////////////////////////////////////////////
constexpr int MOD{1'000'000'007};
unordered_map<i64,int> m{{0,1},{1,2},{2,3}};
i64 g(i64 n)
{
    if( m.count(n)){ return m[n]; }
    i64 j{ n/2 };
    return m[n] = (g(j)*g(n-j-1) + g(j-1)*g(n-j-2))%MOD;
}
class Solution 
{
public:
    int countStrings(i64 n){
        return g(n);
    }
};
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
int main(){int t;cin>>t;while(t--){long long int N;cin>>
N; Solution obj; cout << obj.countStrings(N) << endl; }}
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
// Waitress: Wellcome. Here's the menu.
// Mary: Thank you. What is this?
///////////////////////////////////////////////////////`
// ウエートレス: いらっしゃいませ。メニューを　どうぞ。
// メアリー: どうも。これは　なんですか。
////////////////////////////////////////////////////////
// Waitress: Which one? Oh, it is tonkasu( pork cutlet ).
// Mary: Tonkasu? Is it fish?
////////////////////////////////////////////////////////
// ウエートレス: どれですか。ああ、とんかつです。
// メアリー: とんかつ？　さかなですか。
////////////////////////////////////////////////////////
// Waitress: No, it's not fish. It's meat. It is delitious.
// Mary: Then, I'll have this.
////////////////////////////////////////////////////////
// ウエートレス: いいえ、さかなじゃないです。にくです。おいしですよ。
// メアリー: じゃあ、これを　おねがいします。
////////////////////////////////////////////////////////
// Mary: Excuse me, where is the restroom?
// Waitress: It's over there.
// Mary: Thank you very much.
////////////////////////////////////////////////////////
// メアリー: すみません。トイレは　どこですか。
// ウエートレス: あそこです。
// メアリー: ありがとう　ございます。
////////////////////////////////////////////////////////
// Test Cases Passed:                        1115 / 1115
// Total Points Scored:                            8 / 8
// Your Total Score:                                1474
// Total Time Taken:                                0.06

