////////////////////////////////////////////////////////////////
//
//                        1 1 1 1 1 1 1 1 1 1 2
//   +0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0
//   1  . . . . . . . . . . . . . . . . . . . .
//   2  .`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.
//   3  .`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.
//   4  .`.`.`.`.`.`  .`.`.`.`.`.`.`.`.`.`.`.`.
//   5  .`.`. .`.`  .`.` `.`.`.`.`.`.`.`.`.`.`.
//   6  .`.`. .`  .`.`  .`.`.`.`.`.`.`.`.`.`.`.
//   7  .`.`.   .`.`  .`.`   `.`.`.`.`.`.`.`.`.
//   8  .`.`. .`.`  .`.`  .`.  `.`.`.`.`.`.`.`.
//   9  .`.`. .`  .`.`  .`.`.`.  `.`.`.`.`.`.`.
//  10  .`.`. .`.`.`  .`.` `.`.`.  `.`.`.`.`.`.
//  11  .`.`.`.`.`  .`.`.` `.`.`.`.  `.`.`.`.`.
//  12  .`.`.`.`. .`.`.`.` `.`.`.`.`.`.`.`.`.`.
//  13  .`.`.`.`.`.`             `.`.`.`.`.`.`.
//  14  .`.`.`.`.`.`.`.`.` `.`.`.`.`.`.`.`.`.`.
//  15  .`.`.`.`.`.`.`.`.` `.`.`.`.`.`.`.`.`.`.
//  16  .`.`.`.`.`.`.`.`.` `.`.`.`.`.`.`.`.`.`.
//  17  .`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.
//  18  .`.`.`.`.`.`.`.`.`.`.`.` c h a k u r a 
//  19  .`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.
//  20  .`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.`.
// 気（き）
////////////////////////////////////////////////////////////////
// IPL 2021 - Match Day 4
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Due to the rise of covid-19 cases in India, this year BCCI decided
// to organize knock-out matches in IPL rather than a league.
// Today is matchday 4 and it is between one-time champions Rajasthan
// Royals and the team lead by the Youngest Captian - Delhi Capitals.
// As this match is very crucial, Rahul Tewatia, Rajasthan Royals
// all-rounder wants to hit six sixes in an over.  But he knows that
// he can only hit six sixes if he finds the maximum AND value that
// can be generated by any pair of elements from the given array.
// Help Tewatia to find the answer.
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Input: N = 4 arr[] = {4, 8, 12, 16}
// Output: 8
// Explanation: Pair (8, 12) has the Maximum AND Value 8.
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Constraints:
// 1 ≤ N ≤ 10^5
// 1 ≤ arr[i] ≤ 10^5
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
using namespace std;
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
# include <iostream>                                                
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////  
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
//         woher kommst du?                        t          //
//        wowoher kommst du?                      s           //
// woher wohewoher kommst du?              w     n   d        //
//  wohewoher woher kommst du?              o   h     u       //
//   wowoher kowoher kommst du?                o       ?      //
//    woher kommwoher kommst du?              w               //
////////////////////////////////////////////////////////////////
// Sprichst du Französisch?Sprichst du Französisch?            n
//   Sprichst du FranzösiSprichst du Französisch?              e 
//     Sprichst du FranSprichst du Französisch?                h
//       Sprichst du Sprichst du Französisch?                e s
//         SprichstSprichst du Französisch?                  n s
//           SpriSprichst du Französisch?                    i i
//             Sprichst du Französisch?                      e b
////////////////////////////////////////////////////////////////
# include <vector>
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////=
ostream& operator<<( ostream& os, const vector<int>& vec ){
    for( const int el: vec ){
        os << el << " ";
    }
    return os;
}
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
vector<int> filter( int mask, const vector<int>& vec ){
    vector<int> res;
    for( const int el: vec ){
        if( el & mask ){
            res.push_back( el );
        }
    }
    return res;
}
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
int merge( const vector<int>& vec ){
    int res{-1};
    for( const int el: vec ){
        res &= el;
    }
    return res;
}
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
class Solution 
{
public:
    int maxAND( int a[], int n )
    {
        if( n < 2 ) return 0;
        vector<int> vec( a, a + n );
        for( int mask{ 1 << 15 }; mask; mask >>= 1 ){
            auto res{ filter( mask, vec )};
            if( res.size() > 1 ){
                vec = move( res );
            }
        }
        return merge( vec );
    }
};
///////////////////////////////////////////////////////////////_
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// c)
//　たけしさんは　にじゅうにさいです。
//　スーさんは　はたち（にじゅっ）さいです。
//　ロバートさんは　にじゅうにさいです。
//　やましたせんせいは　よんじゅうななさいです。
// d)
//　たけしさんは　さくらだいがくの　がくせいです。
//　スーさんは　ソウルだいがくの　がくせいです。
//　ロバートさんは　ロンドンだいがくの　かぐせいです。
//　やましたせんせいは　さくらだいがくの　せんせいです。
// e)
//　たけしさんさんの　せんこうは　れきしです。
//　スーさんの　せんこうは　コンピューターです。
//　ロバートさんの　せんこうは　ビジネスです。
////////////////////////////////////////////////////////////////
// ママママ　ママママ　ママママ　ママママ
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////____////----\\\\====,,,,^^^^    ====----____''''<<<<\\\\,,,,
int main()  {   int t;  cin >>  t;  while  (    t--){   int n;
cin >>  n;  int arr [   n   +   5], i;  for (   i   =   0;  i
<   n;  i++)cin >>  arr[i]; Solution    obj;cout <<  obj.
maxAND( arr,n)  <<  endl;}}
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Test Cases Passed:                                  300 / 300
// Total Points Scored:                                    4 / 4
// Your Total Score:                                        1378
// Total Time Taken:                                        0.63
