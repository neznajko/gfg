// ############ u s e,                         [ ju:z ] ########
// #############################################################
// #############################################################
// #############################################################
// #############################################################
// ############  \\\\\\\\\\\\\\\\\                      ########
// ############   \\\\\\|||||||\\\\     |||||||         ########
// ############    \\\\\#######\\\\\    #######         ########
// ############     \\\\\\\\\\\\\\\\\                   ########
// ############      \\\|||||||\\\\\\\  |||||||         ########
// ############       \\#######\\\\\\\\ #######         ########
// ############        \\\\\\\\\\\\\\\\\                ########
// ############         |||||||\\\\\\\\\|||||||         ########
// ############         #######\\\\\\\\\#######         ########
// ###########         |#######\\\\\\\\\#######         ########
// #########         ||########|||||||||#####         ||########
// #########|||||||||########################|||||||||##########
// #############################################################
// #############################################################
// #############################################################
// #############################################################
// #############################################################
// 用、ヨウ, yoo
// #############################################################
////////////////////////////////////////////////////////////////
// Check for Children Sum Property in a Binary Tree
////////////////////////////////////////////////////////////////
// Given a binary tree having n nodes. Check whether all of its
// nodes have the value equal to the sum of their child nodes.
// Return 1 if all the nodes in the tree satisfy the given
// properties, else it return 0.
////////////////////////////////////////////////////////////////
// For every node, data value must be equal to the sum of data 
// values in left and right children. Consider data value as 0 
// for NULL child.  Also, leaves are considered to follow the
// property.
////////////////////////////////////////////////////////////////
// Input: Binary tree 35
//                   /  \
//                  /    \
//                 20    15
//                /  \  /  \
//               15   5 10  5
// Output: 1
// Explanation: ...
////////////////////////////////////////////////////////////////
// Expected Time Complexiy: O(n)
// Expected Auxiliary Space: O(Height of the Tree)
////////////////////////////////////////////////////////////////
// 1 <= n <= 10^5
// 1 <= Data on nodes <= 10^5
////////////////////////////////////////////////////////////////
/**************************************************************/
namespace DriverCode{class Node{public int data;public Node left
;public Node right;public Node(int key){this.data=key;this.left=
null;this.right=null;}}/////////////////////////////////////////
/**/class GFG{public Node buildTree(string str){if(str.Length==0
/**/||str[0]== 'N')return null; var ip=str.Split(' ');Node root=
/**/new Node(int.Parse(ip[0]));Queue<Node>queue=new Queue<Node>(
/**/);queue.Enqueue(root);int i = 1;while( queue.Count!=0&&i<ip.
/**/Length){Node currNode = queue.Peek(); queue.Dequeue();string 
/**/currVal=ip[i];if(currVal!="N"){ currNode.left=new Node( int.
/**/Parse(currVal));queue.Enqueue(currNode.left);}i++;if( i>=ip.
/**/Length)break;currVal=ip[i];if(currVal!="N" ){currNode.right=
/**/new Node(int.Parse(currVal));queue.Enqueue(currNode.right);}
/**/i++;}return root;}//////////////////////////////////////////
/******/static void Main(string[]args){ int testcases;testcases= 
/******/Convert.ToInt32(Console.ReadLine());while(testcases-->0)
/******/{var gfg=new GFG();var str=Console.ReadLine().Trim();var
/******/root=gfg.buildTree(str);Solution obj= new Solution();var
/******/res =obj.isSumProperty(root); Console.WriteLine(res);}}}
/**************************************************************/
/**************************************************************/
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// ich habe  wir haben
// du  hast  ihr habt
// er  hat   sie haben
//           Sie haben
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// 1. Herr Wirkner hat morgen viel Arbeit.
// 2. Du hast Problemme.
// 3. Das Jahr hat vier Jahreszeiten.
// 4. Die Leute haben viel Vergnügen.
////////////////////////////////////////////////////////////////
// 1. Pleased to meet you.    a) Viel Vergnügen.
// 2. Enjoy yourself.         b) Gestatten Sie.
// 3. Excuse me.              c) Entschuldigen Sie.
// 4. May I introduce myself? d) Ich habe viel Arbeit.
// 5. I have a lot of work.   e) Angenehem.
////////////////////////////////////////////////////////////////
// 1-e 2-a 3-c 4-b 5-d
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
    class Solution {
        static int data( Node p ){
            return p == null ? 0 : p.data;
        }
        static bool isleaf( Node p ){
            return p.left == p.right;
        }
        public int isSumProperty( Node p ){
            if( p == null || isleaf( p )){
                return 1;
            }
            if( p.data != data( p.left ) + data( p.right )){
                return 0;
            }
            if( isSumProperty( p.left ) == 1 ){
                return isSumProperty( p.right );
            }
            return 0;
        }
    }
}
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// す み ま せ ん が、わ か り ま せ ん。
// su mi ma se n ga wa ka ri ma se n
// Excuse me, but I don't understand.
////////////////////////////////////////////////////////////////
/////////////////////////// rai getsu, gai koku iki masu !
/////////////////////////// らいげつ　がい国　いきます。
/////////////////////////// Next month I'm going overseas!
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Test Cases Passed:                                1120 / 1120
// Total Points Scored:                                    4 / 4
// Your Total Score:                                        1686
// Total Time Taken:                                        0.14
