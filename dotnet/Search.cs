////////////////////////////////////////////////////////////////
//
//      家 house いえ
//      ||||||||||||||||||||||||||||||||||||||||||||||||||||||||
//      |||||##########################################|||||||||
//      |||||##############################::::######## ||||||||
//      |||||######::::::::||||````::::####::::########  |||||||
//      |||||######````||||::::    """"::::;;;;########   ||||||
//      |||||######                            ########   ||||||
//      |||||######    ````,,,,::::````;;;;    ########   ||||||
//      |||||######,,,,                    ::::########   ||||||
//      |||||##########::::::::    ::::;;;;::::########   ||||||
//      |||||######::::````    ::::////````    ########   ||||||
//      |||||######::::    ::::\\\\;;;;    ,,,,########   ||||||
//      |||||######    ::::    ````    ::::::::########   ||||||
//      |||||######::::''''::::    ::::;;;;############   ||||||
//      |||||######    ::::            ::::////########   ||||||
//      |||||######````,,,,::::    ,,,,````::::########   ||||||
//      |||||######,,,,::::||||,,,,####::::````########   ||||||
//      |||||######::::################################   ||||||
//      |||||##########################################   ||||||
//      |||||##########################################   ||||||
//      |||||##########################################   ||||||
//      |||||##########################################   ||||||
//      |||||##########################################   ||||||
//      |||||##########################################   ||||||
//      ||||||                                            ||||||
//      |||||||                                           ||||||
////////////////                                          //////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Zusätzlich //////// [ ausgestattet ] /// [ aufgeschichteten ]
// [ wird ] ////////// mit den auf den ///////// [ Nebenformen ] 
// diese ///////////// Grund- oder ///////////////////// lineare 
// Proportionsfigur // [ Hauptformen ] ///// Umrißlinien und mit 
////////////////////////////////////////////////////////////////
// weiteren ////////////////////////////////////////////////////
// [ Binnenformen ] ////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Search in a Rotated Array
////////////////////////////////////////////////////////////////
// Given a sorted and rotated a r r a y A of N distinct elements 
// which is rotated at some point, and given an element key. The 
// task is to find the i n d e x of the given element key in the 
// array A. The whole array A is given as t h e range to search.
////////////////////////////////////////////////////////////////
// Input: N = 9 
//        A[] = {5, 6, 7, 8, 9, 10, 1, 2, 3} 
//        key = 10
//        l = 0 , h = 8
// Output: 5
// Explanation: 10 is found at index 5
////////////////////////////////////////////////////////////////
// Input: N = 4
//        A[] = {3, 5, 1, 2}
//        key = 6
//        l = 0 , h = 3
// Output: -1
// Explanation: There is no element that has value 6
////////////////////////////////////////////////////////////////
// Can you solve it in expected time complexity?
////////////////////////////////////////////////////////////////
// Expected Time Complexity: O(log N)
// Expected Auxiliary Space: O(1)
////////////////////////////////////////////////////////////////
// 1 ≤ N ≤ 10^7
// 0 ≤ A[i] ≤ 10^8
// 1 ≤ key ≤ 10^8
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
namespace DriverCode{class GFG{ static void Main(string[] args){
int testcases;testcases  =  Convert.ToInt32(Console.ReadLine());
while ( testcases -- > 0 ){ int  sizeOfArray = Convert.ToInt32 (
Console.ReadLine () ); var elements = Console.ReadLine().Trim().
Split(' ');int[] arr = new int[sizeOfArray];for ( int i = 0; i < 
sizeOfArray; i++){ arr[i] = int.Parse( elements[i]) ;} int key = 
Convert.ToInt32(Console.ReadLine());Solution obj=new Solution();
var res  =  obj.search( arr, 0, sizeOfArray - 1, key ); Console.
WriteLine(res);}}}}/////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// tsu'ku,e つくえ desk
// u:e うえ 上 on
// o,ku おくput
////////////////////////////////////////////////////////////////
// put the book on the desk please
////////////////////////////////////////////////////////////////
// tsu,ku,e'NO'u,e'NI'ho,n'WO'o,i,te'ku,da,sa,i
////////////////////////////////////////////////////////////////
// つくえ｜の｜上｜に｜本｜を｜おいて｜ください。
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Your Japanese is good, isn't it?
// nihongo ga joozu desu ne
// 日本語｜が｜上手｜です｜ね。
////////////////////////////////////////////////////////////////
// joozu じょうず 上手 good
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
class Solution {
    int[] a;
    int n;
    int somepoint() {
        int l = 0;
        int u = n - 1;
        while( l < u ){
            int m = ( l + u ) >> 1;
            if( a[m] < a[u] ){
                u = m;
            } else {
                l = m + 1;
            }
        }
        return l;
    }
    int binsrch( int key, int l, int u ){
        while( l <= u ){
            int m = ( l + u ) >> 1;
            if( a[m] == key ){
                return m;
            }
            if( a[m] < key ){
                l = m + 1;
            } else {
                u = m - 1;
            }
        }
        return -1;
    }
    public int search( int[] a, int l, int h, int key ){
        this.a = a;
        this.n = h + 1;
        int p = somepoint();
        if( a[p] == key ) return p;
        if( a[h] == key ) return h;
        if( a[0] == key ) return 0;
        if( a[p] < key && key < a[h] ){
            return binsrch( key, p + 1, h - 1 );
        } 
        return binsrch( key, 1, p - 1 );
    }
}
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Test Cases Passed:                                  442 / 442
// Total Points Scored:                                    4 / 4
// Your Total Score:                                        1674
// Total Time Taken:                                        3.18
