//    ########################################################## 
//    # 友 friend とも tomo
//    ###############   ########################################
//    ###############   ########################################
//    ##############    ########################################
//    ##############    ########################################
//    #######                                        ###########
//    ##############   #########################################
//    ##############   #########################################
//    #############    #########################################
//    #####       #    #                     ###################
//    #############   #############        #####################
//    #############   #   #######        #######################
//    #############  `       ##        #########################
//    ############    ##     ```     ###########################
//    ############    #####```  ```#############################
//    ############   ####     `       ##########################
//    ############   ##        ##        #######################
//    ############ ,,``      #######        ####################
//    ###########``,,      ############        #################
//    ###########  ``    #################        ##############
//    ###########   #``######################   ################
//    ###########   ############################################
//    ###########   ############################################ 
//    ##########    ############################################ 
//    ##########    ############################################ 
//    ##########   ############################################# 
//    ##########   #############################################
////////////////////////////////////////////////////////////////
// Longest Sub-Array with Sum K
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Given an array containing N integers and an integer K., Your 
// task is to find the length of the longest Sub-Array with the 
// sum of the elements equal to the given value K.
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Input: A[] = {10, 5, 2, 7, 1, 9} K = 15
// Output: 4
// Explanation: The sub-array is {5, 2, 7, 1}
////////////////////////////////////////////////////////////////
// Expected Time Complexity: O(N)
// Expected Auxiliary Space: O(N)
////////////////////////////////////////////////////////////////
// 1 <= N <= 10^5
// -10^5 <= A[i],K <= 10^5
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
namespace DriverCode{class GFG{static void Main( string[] args){
int testcases; testcases = Convert.ToInt32( Console.ReadLine());
while( testcases-->0 ){ var ip = Console.ReadLine().Trim().Split
(' '); int n = int.Parse(ip[0]); int k = int.Parse(ip[1]); int[] 
arr = new int[n]; ip = Console.ReadLine().Trim().Split(' '); for
(int i = 0; i < n; i++){ arr[i] = int.Parse(ip[i]);}Solution obj 
= new Solution(); var res=obj.lenOfLongSubarr(arr, n, k);Console
.WriteLine(res);}}}}////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
class Solution {
    ////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////
        // viel{ much } Vergnügen[ pleasure ]
        // noch{ yet }
        // deshalb - therefore
        // schade{ too bad, pity }
        // leute - folks
        // nette - nice
        // wahr[ true ]
        // leider - unfortunately
        // angenehm - pleasant
        // freut mich - nice to meet you
        // Ich werabschiede mich{ I'm saying goodbye }
        // stimmen - to be correct
        // verzeihung - excuse me
    ////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////
    public int lenOfLongSubarr( int[] a, int n, int k ){
        var d = new Dictionary <int,int> ();
        d[0] = 0;
        int[] prefix = new int[n + 1];
        for( int j = 0; j < n; ++j ){
            int key = prefix[ j + 1 ] = prefix[ j ] + a[ j ];
            if( !d.ContainsKey( key )){
                d[ key ] = j + 1;
            }
        }
        int ma8 = 0;
        for( int j = n; j > 0; --j ){
            int key = prefix[j] - k;
            if( d.ContainsKey( key )){
                ma8 = Math.Max( ma8, j - d[ key ]);
            }
        }
        return ma8;
    }
}
///////////////////////////////////////////////////////////////_
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// 早い hayai はやい
// ##            '' // 京 kyo きょう
// ## #####''''' '' // #######  ``````` // 都 to と city
// ##            '' // ##            `` // ###  ###'''''''' ////
// ## #####''''' '' // ########```````` // #      #'     '' ////
// ##            '' // ####        ```` // ###  ###'  ''  ' ////
// =======  \\\\\\\ // ####  ##``  ```` //         '  ''  ' ////
//                  // ////        ____ // ####  ##'    ''' ////
// =======  \\\\\\\ // ////////________ // _      _`  `  `` ////
// =======  \\\\\\\ // ///  //  __  ___ //    __  _`  ``  ` ////
// =======  \\\\\\\ // /  ////  ____  _ // _      _`  ``  ` ////
//            early // ////////________ // _  __  _`  `  `` ////
//////////////////////          capital // _      _`  ````` ////
//////////////////////////////////////////             city ////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// kyo 今日 today きょう
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Test Cases Passed:                                1193 / 1193
// Total Points Scored:                                    4 / 4
// Your Total Score:                                        1670
// Total Time Taken:                                        0.17
