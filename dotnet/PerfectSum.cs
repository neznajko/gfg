// // / // /   / ////////  ////////////////////// //////// /// /
// / / // /   / ///[ react component is not your opponent ]// //
//  / // /   / ////////  ////////////////////// //////// /// ///
// / // /   / //                                   //// /// ////
//  // /   / ////////  ////////    ////////// //////// /// /////
// // /   / ////////  /////////    ///////// //////// /// //////
// / /   / /////    ___________    ___________    // /// /////// 
// _'___`_."_.__    __  _______    __  _______    __,`'__",__"__
// _____________    _      ____    _      ____    ______________
// ___/_________    ____      _    ____      _    ______________
// _____________    _______        _______  __    ______________
// @@@@@@@@@@@@@    @@@@@@@@@@      @@@@@@@@@@    @@@@@@@@@@@@@@
// _____________    __  _______        _______    ______________
// _____________    _      ____    _      ____    ______________
// -------------    ----      -    ----      -    --------------
// =============    =======  ==    =======  ==    ==============
// '''''''''''''. . ''''''''''' . .''''''''''' . .''''''''''''''
// ||||||||||||| . .|||||||||||. . |||||||||||. . ||||||||||||||
// @@@@@@@@@@@@@....@@@@@@@@@@@....@@@@@@@@@@@....@@@@@@@@@@@@@@
// #############::::###########::::###########::::##############
// #############||||###########||||###########||||##############
// 雨 ame あめ
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Perfect Sum Problem
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Given an array arr of non-negative integers and an integer 
// sum, the task is to count all subsets of the given array with 
// a sum equal to a given sum. Note: Answer can be very large, 
// so, output answer modulo 10^9+7.
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Input: N = 6 arr = [5, 2, 3, 10, 6, 8] sum = 10
// Output: 3
// Explanation: {5, 2, 3}, {2, 8}, {10} are possible subsets
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Input: N = 5 arr = [2, 5, 1, 4, 3] sum = 10
// Output: 3
// Explanation: {2, 1, 4, 3}, {5, 1, 4}, {2, 5, 3} are possible 
// subsets
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Expected Time Complexity: O(N*sum)
// Expected Auxiliary Space: O(N*sum)
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// 1 ≤ N*sum ≤ 10^6
// 0 ≤ arr[i] ≤ 10^6
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
namespace DriverCode{ class GFG{ static void Main(string[]args){
int testcases; testcases = Convert.ToInt32( Console.ReadLine());
while( testcases-->0 ){ var inputLine = Console.ReadLine(); if ( 
inputLine==null)return;var ip=inputLine.Trim().Split(' ');int n= 
int.Parse( ip[0]);int sum=int.Parse(ip[1]);int[] arr=new int[n];
inputLine = Console.ReadLine(); if( inputLine == null)return;ip= 
inputLine.Trim().Split(' '); for( int i=0;i<n;i++){ arr[i]= int.
Parse(ip[i]);}Solution obj=new Solution();var res=obj.perfectSum
(arr,n,sum);Console.WriteLine(res);}}}}/////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////  1. Hello Mr. Schüler.           a. Das tut mir leid.
////  2. What's the matter?           b. Wie geht es Ihnen?
////  3. I'm sorry.                   c. Ich bin krank.
////  4. She is in Germany now.       d. Sie ist jetzt in Deutschland.
////  5. How are you?( pol. )         e. Was ist los?
////  6. How are you?( fam. )         f. Ach, mir geht es nicht so gut.
////  7. I'm sick.                    g. Gut danke.
////  8. Fine thanks.                 h. Wie geht's?
////  9. Oh, I'm not feeling so good. i. Guten Tag, Herr Schüler.
//// 10. Bye.                         j. Tschüs.
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
# nullable disable
////////////////////////////////////////////////////////////////
// country ( On the road again .. ) ///////////////////////// 国
////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////// こく
////////////////////////////////////////////////////////////////
// going いく i ku
// overseas がい国 ga i ko ku
// next month らいげつ ra i ge tsu
// I'm going overseas next month.
// らいげつ｜がい国｜に｜いきます。
////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////// ごく
////////////////////////////////////////////////////////////////
// return かえる ka e ru
// I'm going back to China next year.
// らいねん｜中国｜に｜かえります。
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////// くに
////////////////////////////////////////////////////////////////
// Japan is a nice country.
// 日本｜は｜いい｜くに｜です。
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
class Solution {
    private const long FUNKY_DETACHMENT = 1000000007;
    private long[,] dp;
    public int perfectSum( int[] a, int n, int sum ){
        dp = new long[sum + 1, n];
        if( a[n - 1] <= sum ){
            dp[a[n - 1], n - 1] = 1;
        }        
        for( int j = 0; j < n; ++j ){
            dp[0, j] = a[j] == 0 ? 2 : 1;
        }
        for( int j = n - 2; j > -1; --j ){
            for( int s = 0; s <= sum; ++s ){
                long taike = 0;
                if( a[j] <= s ){
                    taike = dp[s - a[j], j + 1];
                }
                long skp = dp[s, j + 1];
                dp[s, j] = ( taike + skp )% FUNKY_DETACHMENT;
            }
        }
        return (int) dp[sum, 0];
    }
}
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Test Cases Passed:                                1120 / 1120
// Total Points Scored:                                    4 / 4
// Your Total Score:                                        1662
// Total Time Taken:                                        0.11
// prev:       github.com/neznajko/gfg/blob/main/python/coils.py
// logbook:      Birth and death are the harmony between all and 
// nothing. To christian religion dead lives in hell so to speak
//    where Jesus after paying for the sins of the human kind so
//  that they can go to eden once again goes down and defeats it
//    not very clear how was it by split decision or a technical
//    knockout or maybe he just dodge it cos killing the dead is
//     the absurd even for the book. According to Dao philosophy
//      In and Yang as they say it represents opposite forces or
//    something like this, for example historically the S Korean
//  flag represents cosmic opposite forces. I'm telling this cos
//   don't want to mess up with k-pop stars and similar I do not
// sing songs. There are no opposite forces, the harmony between
//                                        opposites is the force
