
#439484756049547872665484983337550978675243671836   4894
#090913865937359739539573923920395782395235464654   2223
#092746309583489583403  4343466314789100912948748   8993
#3464640957837344422  44  14635473324354783465832   1089
#09898739390202731  093843  894712209383475056090   4384
#23459343464643   1346347473   904934034040349593   0484
#12343430948   344          094   098766554221635   3633
#891800009474799499433  0000384010174011744949994   3115
#034934734940390101010  2228493349493015177648949   9340
#0349400400041   7              94943040740404840   9949
#346547575645333   980  1524 01394943131394894947   4844
#4484743034848401   43  451   0974874894848449747   4948
#84841184748748744 144  17   82888717177188171771   4444
#84830484744               4      114947491044794   4994
#204749473475799901094777170494710104848444404984   0444
#671543874391092726587393883957347389287455001029   2989
#________________________________________________ g ____
#------------------------------------------------ o ----
#................................................ l ....
#```````````````````````````````````````````````` d ````
#349084655463404034084654654689540437479940000274   4635
#474658573908376551442496769584748550494847467484   4674
#134895649648348540695406959648476720485409440894   4064
#349493448493914748483900134810237842746746659983   6389
#
# Find minimum number of Laptops required
########################################################
########################################################
# There are N jobs and the start and finish time of the jobs
# are given in arrays start[] and end[] respectively. Each
# job requires one laptop and laptops can't be shared. Find
# the minimum number of laptops required given that you can
# give your laptop to someone else when you are not doing
# your job.
########################################################
########################################################
# Input: N = 3, start[] = {1, 2, 3}
#               end[] = {4, 4, 6}
# Output: 3
# Explanation: We can clearly see that everyone's supposed
# to be doing their job at time 3. So, 3 laptops will be
# required at minimum.
########################################################
########################################################
# Expected Time Complexity: O(NlogN)
# Expected Auxiliary Space: O(N)
#######################################################=
########################################################
########################################################
########################################################
########################################################
########################################################
#                 +--------------------+
#                /                     |
#    +----------/----+                 |
#   /   +------/-+   |       +------------+
#--/---/------/--|---|------/----------|--|-------------
#  A   B      C  a   b      D          c  d
#                3   2                 2  1 
class Solution: 
    def minLaptops( self, n, start, end ):
        start.sort()
        end.sort()
        k = n
        magz = 0 # magzimum
        for j in reversed( range( 1, n )): # n - 1 .. 1
            k = binsrch( end, k, start[j] )
            magz = max( magz, j - k )
        return magz + 1
########################################################
###### 0 ##### 1 ##### 2 ##### 3 ##### 4 ##### 5 ##### 6
       #       #       #       #       #       #       #
def binsrch( a, n, key ):
    l, u = 0, n - 1
    while l <= u:
        mid = ( l + u ) // 2
        if a[ mid ] > key:
            u = mid - 1
        else:
            l = mid + 1            
    return l
########################################################
########################################################
if __name__ == '__main__': #############################
    T = int(input()) ###################################
    while T > 0: #######################################
        N = int(input()) ###############################
        start = list(map(int,input().split())) #########
        end = list(map(int,input().split())) ###########
        ob = Solution() ################################
        print(ob.minLaptops(N, start, end)) ############
        T -= 1 #########################################
########################################################
########################################################
########################################################
########################################################
# (I am) an international student.
#　りゅうがくせいです。
# (Are you) an international student?
#　りゅうがくせいですか。
# What is your major?
#　せんこうはなんですか。
# (My major) is English.
#　（せんこうは）えいごです。
########################################################
########################################################
########################################################
########################################################
#　カ　カ　カ　カ　カ
#　キ　キ　キ　キ　キ
#　ク　ク　ク　ク　ク
#　ケ　ケ　ケ　ケ　ケ
#　コ　コ　コ　コ　コ
########################################################
########################################################
########################################################
########################################################
# Test Cases Passed:                           122 / 122
# Total Points Scored:                             4 / 4
# Your Total Score:                                 1338
# Total Time Taken:                                 1.55
