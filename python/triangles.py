################################################################ ト to
################################################################ ウ  u
################################################################
################################################################ 刀
##########%%%%%%%%%%%%\/\/\/\/\/\/##############################
##########%%%                 \/\/####################### espada s
##########%%%%%%%%%%%%\/\/    \/\/##############################
##########%%%%%%%    %\/\/    \/\/###################### schwert g
##########%%%%%%%    %\/\/    \/\/##############################
##########%%%%%%%    %\/\/    \/\/######################## spada i
##########\\\\\\\    \====    ====##############################
##########\\\\\\\    \====    ====######################### épée f
##########\\\\\\    \\====    ====##############################
##########\\\\\    \\\====    ====########################## меч u
##########\\\    \\\\\===    =====##############################
##########\\\\\\\\\\\\============######################## sword e
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
# Count the number of possible triangles
################################################################
# Given an unsorted array arr[] of n positive integers. Find the
# number of triangles that can be formed with three different 
# array elements as lengths of three sides of triangles 
################################################################
# Input: n = 5, arr[] = { 6, 4, 9, 7, 8 }
# Output: 10 Explanation: There are 10 triangles possible with 
# the given elements like (6,4,9),(6,7,8),...
################################################################
# Expected Time Complexity: O(n^2)
# Expected Space Complexity: O(1)
################################################################
# 3 <= n <= 10^3
# 1 <= arr[i] <= 10^3
################################################################
################################################################
def binsrch( A, key ):
    l, u = 0, len( A ) - 1
    while l <= u:
        m = ( l + u ) // 2
        if A[ m ] <= key:
            l = m + 1
        else:
            u = m - 1
    return l
################################################################
################################################################
def getpairs( A, n ):
    P = []
    i = 0
    while i < n - 1:
        j = i + 1
        while j < n:
            P.append( A[ i ] + A[ j ])
            j += 1
        i += 1
    P.sort()
    return P
################################################################
################################################################
class Solution:
    ''''''
    def findNumberOfTriangles( self, A, n ):
        """"""
        A.sort()
        P = getpairs( A, n )
        j = n - 1
        ck = 0
        tot = 0
        while j >= 2:
            key = A[ j ]
            ck += j
            b = binsrch( P, key )
            nfp = len( P ) - b - ck
            if nfp > 0:
                tot += nfp
            j -= 1
        return tot
################################################################
################################################################
################################################################
################################################################
if __name__=='__main__': #######################################
    t=int(input()) #############################################
    for _ in range(t): #########################################
        n=int(input()) #########################################
        arr=list(map(int,input().strip().split())) #############
        ob=Solution() ##########################################
        print(ob.findNumberOfTriangles(arr,n)) #################
################################################################
################################################################
################################################################
################################################################
# Test Cases Passed:                                     52 / 52
# Points Scored:                                           4 / 4
# Your Total Score:                                         1766 
# Time Taken:                                               1.34
