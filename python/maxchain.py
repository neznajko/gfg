########## # # ################################################# よ
########## # # ################################################# む
########## # # ################################################# 読
########## # # ################################################# む
########## # #     #############################################
########## # #####################... ##########################
##########             ###.................. ###################
############ #####################... ##########################
############         #####.................. ############ читати U
################################################################
############         #####.................  ############## lire F
################# ########..  ###########..  ###################
##########             ###.. .#.. .#.. .#..  ############# lesen G
##########    ### #    ########.. .#..  ########################
##########    ### #    #######..  ###.. .#..  ############# leer S
##########             ####..  #########..  ####################
############ #### ###################################### leggere I
############ #### ##############################################
############ #### ######################################### read E
############ #### ##############################################
# Max length chain
################################################################
# You are given N pairs of numbers. In every pair, the first
# number is always smaller than the second number. A pair (c, d)
# can follow another pair (a, b) if b < c. Chain of pairs can be
# formed in this fashion. You have to find the longest chain
# which can be formed from the given set of pairs
################################################################
# Input: N = 5, P[] = {5 24, 39 60, 15 28, 27 40, 50 90}
# Output: 3 Explanation: {{5, 24}, {27, 40}, {50, 90}}
################################################################
# Expected Time Complexity: O( Nlog( N ))
# Expected Auxiliary Space: O( 1        )
################################################################
# 1<=N<=10^5
###############################################################_
class Solution:
    def maxChainLen( self, P, n ):
        P = sorted( map( lambda y: ( y.a, y.b ), P ),
                    reverse=True )
        nfpairs = 1
        lastpair = P[ 0 ]
        for pair in P[ 1: ]:
            if pair[ 1 ] < lastpair[ 0 ]:
                nfpairs += 1
                lastpair = pair
        return nfpairs
################################################################
class Pair(object): ################################# che cazzo?
    def __init__(self,a,b): ####################################
        self.a=a ###############################################
        self.b=b ###############################################
################################################################
if __name__ =='__main__': ######################################
    tcs = int(input()) #########################################
    for _ in range(tcs): #######################################
        n=int(input()) #########################################
        arr=[int(x) for x in input().split()] ##################
        Parr=[] ################################################
        i=0 ####################################################
        while n*2>i: ###########################################
            Parr.append(Pair(arr[i],arr[i+1])) #################
            i+=2 ###############################################
        obj=Solution() #########################################
        print(obj.maxChainLen(Parr,n)) #########################
################################################################ う
################################################################ ち
################################################################ 打
################################################################ ち
########                                ########################
########      ####\    ##########\      ################# strike e
########      #### \   \  ####    \     ########################
########   ##########\  \ ####     \    ################### удар u
########   \  ####    \  \####      \   ########################
########    \ #######  \  ####       \  ############### schlagen g
########   #######      \ ####        \ ########################
########   \  ####       \####         \################ frapper f
########    \####        ####           ########################
########     \           \              ################ golpear s
################################################################
######################################################## colpire i
################################################################
################################################################
# log:
# Test Cases Passed:                                 1115 / 1115
# Points Scored:                                           4 / 4
# Your Total Score:                                         1754 
# Time Taken:                                               0.71
