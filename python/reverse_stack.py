
# ''''''''''''''\\\\\\\\\\\\\\ ハチ
# //////////////--------------
# ''''''''''''''==============
# /////////  ///--------------
# ''''''''' ''''==.  #========
# ////////  ////---  ---------
# '''''''' '''''===-  ========
# -------  -----.....  .......            ##############
# ------  ------......  ......            ######4#######
# -----  -------.......  .....            ####4 #4# ####
# ----  --------........  ....            #### ###4# ###
# --------------..............            ### #####4# ##
# --------------..............            ##########4###
# --------------..............            ##############

########################################################
########################################################
########################################################
########################################################
# Reverse a Stack ######################################
########################################################
########################################################
########################################################
###########################################################
# You are given a stack St. You have to reverse the stack #
# using recursion. ########################################
########################################################
########################################################
########################################################
########################################################
# Expected Time Complexity: O(N^2) #####################
# Expected Auxiliary Space: O(1) #######################
########################################################
########################################################
########################################################
########################################################
# i n s e r t i n g * reverse( stk )         -----------
# 'a'b'c'd' |       * 1 if stk.empty: return ===========
# 'a'b'c'   | d     * 2 val <- stk.pop()     . . . . . .
# 'a'b'     | c d   * 3 reverse( stk )        * * * * *
# 'a'b'd'   | c     * 4 insert( stk, val )   ___________
#        ..         *                        """""""""""
#                   * insert( stk, val )     ...........
# 'd'a'b'   | c     * 1 if stk.empty:        :::::::::::
# 'd'a'b'c' |       * 2   stk.push( val )    \\\\\\\\\\|
#                   * 3 else:                '''''''''''
#                   * 4   pop <- stk.pop     [ ][][ ][ ]
#                   * 5   insert( stk, val ) ()()()()( )
#                   * 6   stk.push( pop )    ^^^^^^^^^^^
########################################################
import sys
########################################################
sys.setrecursionlimit( 2000 )
########################################################
########################################################
########################################################
########################################################
def reverse( stk ):
    if not stk: return
    val = stk.pop()
    reverse( stk )
    insert( stk, val )    
########################################################
########################################################
########################################################
########################################################
def insert( stk, val ):
    if not stk: 
        stk.append( val )
    else:
        pop = stk.pop()
        insert( stk, val )
        stk.append( pop )
########################################################
########################################################
########################################################
########################################################
class Solution:
    def reverse( self, stk ): 
        reverse( stk )
########################################################
########################################################
########################################################
########################################################
for _ in range(int(input())): ##########################
    N=int(input()) #####################################
    St=list(map(int,input().split())) ##################
    ob=Solution() ######################################
    ob.reverse(St) #####################################
    print(*St) #########################################
########################################################
########################################################
########################################################
########################################################
#　１．ひふ　　４．しぬ　　# 1. hifu   4. shinu
#　２．なにか　５．このは　# 2. nanika 5. konoha
#　３．ほね　　６．へた　　# 3. hone   6. heta
# 1. fune( boat )   4.heso( navel )
# 2. hoshi( star )  5.nuno( cloth )
# 3. hana( flower ) 6.hiniku( sarcasm )
#　１．ふね　４．へそ
#　２．ほし　５．ぬの
#　３．はな　６．ひにく
########################################################
# Test Cases Passed:                         1120 / 1120
# Total Points Scored:                             4 / 4
# Your Total Score:                                 1286
# Total Time Taken:                                 1.73
