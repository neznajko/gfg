
                                ############------------
                                ############============
                                ##########    ==========
                                ####                ====
                                ########################
                                #######   ##--   -------
                                ######   ###===   ======
                                #####   ####----   -----
                                ####   #####-----   ----
                                ############------------
                                ############------------
#                                                   ロク
########################################################
# Print leaf nodes from preorder traversal of BST ######
########################################################
# Given a preorder traversal of a BST, find the leaf ###
# nodes of the tree without building the tree. #########
########################################################
########################################################
# Input: N = 3, Arr = {3, 2, 4} ########################
# Output: {2, 4} #######################################
########################################################
# Expected Time Complexity: O(N) #######################
# Expected Auxiliary Space: O(N) #######################
#######################################################=
#      0       1       2       3       4       5       6
########################################################
########################################################
########    ##########    ##########    ##########    ##
######        ######        ######        ######        
#####          ####          ####          ####         
#====          ====          ====          ====         
#----          ----          ----          ----         
from math import inf
########################################################
########################################################
########################################################
########################################################
class Solution:
    def leafNodes( self, A, n ):
        if not A: return []
        P = [ inf ]
        L = []
        for _ in A:
            leaf = P[-1]
            npop = 0
            while _ > P[-1]:
                P.pop()
                npop += 1
            if npop > 1: L.append( leaf )
            P.append( _ )
        L.append( P[-1] )
        return L
########################################################
########################################################
####### a #### [ inf d ] ###############################
####### # ##############################################
###### ### ### [ c d ]  ################################
#### b ### d ###########################################
###### ######## a b c d ################################
###### c ######       _ ################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
if __name__=='__main__':################################
    t=int(input())######################################
    for _ in range(t):##################################
        N=int(input())##################################
        arr=input().split()#############################
        for itr in range(N):############################
            arr[itr]=int(arr[itr])######################
        ob=Solution()###################################
        ans=ob.leafNodes(arr,N)#########################
        for i in range(len(ans)):#######################
            print(ans[i],end=" ")#######################
        print()#########################################
########################################################
########################################################
########################################################
###############################################################
# じゆういち、じゆういち、じゆういち、じゆういち、じゆういち、#
# じゆうに、じゆうに、じゆうに、じゆうに、じゆうに、じゆうに、#
########################################################
# Test Cases Passed:                       10010 / 10010
# Total Points Scored:                             4 / 4
# Your Total Score:                                 1278
# Total Time Taken:                                 0.77
