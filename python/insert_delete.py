########################################################
########################################################
########################################################
########################################################
#. . . ))))))))))))))))%%%%%%%%%%%%%%%%. . . . . . . . .
#.`.`.`))      ))))))))%%  %%%%%%%%%%%%`.`.`.`.`.`.`.`.`
#. . . ))  )))  )))))))  %%  %%%%%%%%%%. . . . . . . . .
# . . .))  ))  ))))))  %%%%%%  %%%%%%%% . . . . . . . . 
#. . . ))  )  )))))  ))%%%%%%%%  %%%%%%. . . . . . . . .
# . . .))    ))))  ))          %%  %%%% . . . . . . . . 
#. . . ))  )  )  ))))))%%  %%%%%%%%  %%. . . . . . . . .
# . . .))  ))  ))))))))%%  %%%%%%%%%%%% . . . . . . . . 
#. . . ##  ###  ##                 ''''. . . . . . . . .
#,`,`,`##  ###  #######''  '''''''''''',`,`,`,`,`,`,`,`,
#. . . ##  ##  ####  ##''  ''''  '''''' . . . . . . . .
# . . .##  #  ####  ###''  '''''  '''''. . . . . . . . .
#. . . ##    ####  ####''  ''''''  '''' . . . . . . . .
# . . .##  #####  #####''  '''''''  '''. . . . . . . . .
#. . . ##  ############''  '''''''''''' . . . . . . . .
# . . .################''''''''''''''''. . . . . . . . .
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
     ####                                      ####
     ####                                      ジョ
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
# Minimum number of deletions and insertions
########################################################
# Given two strings str1 and str2. The task is to remove
# or insert the minimum number of characters from/in str1
# so as to transform it into str2. It could be possible 
# that the same character needs to be removed/deleted from
# one point of str1 and inserted to some another point.
########################################################
# Input: str1 = "h", str2 = "p"
# Output: 2
########################################################
# Expected Time Complexity:  O(|str1||str2|)
# Expected Space Complexity: O(|str1||str2|)
#######################################################=
#                                         0 1 2 3 4 5 6
# remove/deleted                        +-d-e-l-e-t-e-d-
# deleted/remove                      0 r 9 8 7 6 7 6 7 6
#                                     1 e 8 7 6 5 6 5 6 5
# xexxxex                             2 m 9 8 7 6 5 4 5 4
# r mov                               3 o 8 7 6 5 4 3 4 3
#                                     4 v 7 6 5 4 3 2 3 2
#                                     5 e 6 5 4 3 2 1 2 1
#                                         7 6 5 4 3 2 1 0
########################################################
########################################################
########################################################
#######################################################_
class Solution:
    def minOperations( self, s, t ):
        n = len( s )
        m = len( t )
        mat = [[ 0 ]*( m + 1 ) for _ in range( n + 1 )]
        for j in range( m ): mat[n][j] = m - j
        for i in range( n ): mat[i][m] = n - i
        for i in reversed( range( n )):
            for j in reversed( range( m )):
                ryte = 1 + mat[i][j + 1]
                botm = 1 + mat[i + 1][j]
                diag = 2*( s[i] != t[j] ) + mat[i + 1][j + 1]
                mat[i][j] = min( ryte, botm, diag )
        return mat[0][0]
#######################################################=
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
if __name__=='__main__':################################
    T=int(input())######################################
    for i in range(T):##################################
        s1,s2=input().split()###########################
        ob=Solution()###################################
        ans=ob.minOperations(s1,s2)#####################
        print(ans)######################################
########################################################
# Test Cases Passed:                           200 / 200
# Total Points Scored:                             4 / 4
# Your Total Score:                                 1246
# Total Time Taken:                                 0.16
