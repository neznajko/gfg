########################################################
########################################################
########################################################
########################################################
########
########  ################################################
########  ################################################
########  ################################################
########  #####==========::::::::::#######################
########  #####========-  :::::::::#######################
########  #####=========  :::::::::#######################
########  #####=========  |||||||||#######################
########  #####==```````         ::#######################
########  #####=========  |||||||||#######################
########  #####~~~~~~~~~  =========#######################
########  #####~~~~~~~~~  =========#######################
########  #####~~~~~~~~~-==========#######################
########  #####~~~~~~~~~~==========#######################
########  ################################################
########  ################################################
########  ################################################
########                                          ジュウ
# Flip Bits ............................................
#####################################################################
# Given an array A[] consisting of 0’s and 1’s. A flip operation ====
# is one in which you turn 1 into 0 and a 0 into 1. You have ========
# to do at most one “Flip” operation of any subarray. Formally, =====
# select a range (l, r) in the array A[], such that (0 ≤ l ≤ r < n) =
# holds and flip the elements in this range to get the maximum ======
# ones in the final array. You can possibly make zero operations ====
# to get the answer. You are asked to return the maximum number =====
# of 1 you can get in the array after doing flip operation. =========
#####################################################################
# Input: N = 5, A[] = {1, 0, 0, 1, 0} ~~~~~~~~~~~~~~~~~~~~~~
# Output: 4 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Explanation: Perform a flip operation in the range [1,2] ~
############################################################
# Input: N = 7, A[] = {1, 0, 0, 1, 0, 0, 1} ________________
# Output: 6 ________________________________________________
# Explanation: Perform a flip operation in the range [1,5] _
############################################################
# Expected Time Complexity: O(N) >>>>>>>>>>>>>>>>>>>>>>>
# Expected Auxiliary Space: O(1) >>>>>>>>>>>>>>>>>>>>>>>
########################################################
########################################################
####[ 1 0 0 1 0 ]#######################################
########################################################
def getrange( a, n ):
    i, mi = 0, 0
    j, mj = 0, -1
    s, ms = 0, 0
    f = [ 1, -1 ]
    while j < n:
        if not s: i = j
        s += f[a[j]]
        if s < 0: s = 0
        if s > ms:
            ms = s
            mi = i
            mj = j
        j += 1
    return mi, mj
########################################################
def flip( a, i, j ):
    for _ in range( i, j + 1 ):
        a[_] = 1 - a[_]
class Solution: #///////////////////////////////////////
    def maxOnes( self, a, n ): #////////////////////////
        flip( a, *getrange( a, n ))
        return sum( a )
########################################################
def main(): ############################################
    T = int(input()) ###################################
    while(T > 0): ######################################
        n = int(input()) ###############################
        a = [int(x) for x in input().strip().split()] ##
        ob=Solution() ##################################
        print(ob.maxOnes(a, n)) ########################
        T -= 1 #########################################
if __name__ == "__main__": #############################
    main() #############################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
# １．まち　２．みせ　３．むね　４．ゆみ　５．もや　６．よむ
# 1. machi 2.mise 3. mune 4.yume 5.moya 6.yomu
#
# 1. mochi       3. kami         5. musume
#    (rice cake)    (paper;hair)    (daughter)
# 2. matsu       4. oyu          6. yoyaku
#    (wait)         (hot water)     (reservation)
# １．もち　２．まつ　３．かみ　４．おゆ　５．むすめ　６．よやく
########################################################
########################################################
# Test Cases Passed:                         1332 / 1332
# Total Points Scored:                             4 / 4
# Your Total Score:                                 1294
# Total Time Taken:                                 0.58
