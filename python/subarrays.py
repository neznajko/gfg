################################ | || | |  |  || |  | | ########
################################ | || | |  |  || |  | | ########
################################ | || | |  D  || |  | | ########
################################ | R| | |     E| |  | | ########
#############   \\\############# |  | | R #### | |  | | ########
#############    \\############# |  E |   #### R |  O | ########
#############     \############# P    O   ####   N    W ########
#############      #############          ####          ########
##\\\\\\            \\\\\\\\\\## ###################### ######## 
##\\\\\\\            \\\\\\\\\## ###################### ########
##\\\\\\\\            \\\\\\\\## ###################### ########
############         ###########        #######         ########
###########\            ############## ######### ###############
##########\\\            \\########## ########### ##############
#########\\\\\            \\\\###### ############# #############
########\\\\\\\    ###     \\\\\\## ##### ######### ############ 
#######\\\\\#\\\   ######   \\\\## #####  #### ##### ###########
######\\\\\##\\\\  ######### \\## ##### # ####  ##### ########## 
#####\\\\\###\\\\\ ############# ##### ## #### # ##### #########
####\\\\\####\\\\\\#### ..........   .....    ....     ...... ##
#####\\\#####\\\\\\#### .         . .    .    .   .     .   . ##
######\######\\\\\\#### .          .     .    .    .   .    . ##
#############\\\\\\#### .                .    .     . .     . ##
#############\\\\\\#### .                .    .      .      . ##
#############\\\\\\#### .                .    .             . ##
####################### .                .    .             . ##
####################### .                 ....              . ##
####################### .                                   . ##
####################### .                                   . ##
####################### ..................................... ##
#######################                                       ##
################################################################
# 「林」で 迷 っ た。 Изгубени в [ гората ]
################################################################
################################################################
################################################################
################################################################
################################################################
# 1. 私は あした 友だちに 会います。（に）
# 2. メアリさんは 京都の お寺で 写真を 撮りました。（を）
# 3. 私は 喫茶店で ロバートさんを 待ちました。（を）
# 4. スーパーで 肉を 買いました。（を）
# 5. 私は 中国語が わかりません。（が）
# 6. 私は きのう 手紙を 書きませんでした。（を）
#
################################################################
################################################################
################################################################
################################################################
# Subarrays with sum K
################################################################
# Given an unsorted array of i n t e g e r s, find the number of
# s u b a r r a y s having sum exactly equal to a given number k
################################################################
# Input: arr = [10, 2, -2, -20, 10], k = -10
# Output: 3
# Explaination: Subarrays: arr[0:3], arr[1:4], arr[3:4] have sum
# exactly equal to -10
################################################################
#   1  ≤ arr.size() ≤ 10⁵
# -10³ ≤ arr[i]     ≤ 10³
# -10⁷ ≤ k          ≤ 10⁷
################################################################
################################################################
################################################################
################################################################
# The key to this problem was to ask, not how to f i n d all sub
# arrays that sum to k, but how to find a single array that sums
# to k. Again here w e can use the p a r t i a l sum array and a
# dictionary to keep track of the seen partial sums
################################################################
################################################################
################################################################
################################################################
# a = 10 12 10 -10 0, k = -10                            DeBuga™
# d = { 0:2, 10:2, 12:1, -10:1 }
# n = 3
# j = 4
# x = 10
class Solution: #
    def countSubarrays( self, a, k ): #                        0
        d = { 0: 1, a[0]: 1 } # partial sum counter            1
        n = int( a[0] == k ) # numof sub arrays with sum k     2
        for j in range( 1, len( a )): #                        3 <
            a[j] += a[j - 1] #                                 4
            # search for x: a[j] - x = k                       5
            x = a[j] - k #                                     6
            if x in d: n += d[x] #                             7
            # add a[j] to d                                    8
            key = a[j] #                                       9
            if key in d: #                                     a
                d[key] += 1 #                                  b
            else: #                                            c
                d[key] = 1 #                                   d
        #                                                      e
        return n #                                             f
    
################################################################
################################################################
################################################################
################################################################
# <> 2.1.35*: The mass o f the balloon together w i t h the rope
# dragging along the ground is m; t h e buoyant force acting o n
# t h e balloon is F; the coefficient of friction of the rope on
# the g r o u n d is μ. The air resistance force acting on t h e
# balloon is proportional t o the square of the velocity o f the
# balloon relative to the air: f = αυ².  F i n d the velocity of
# the balloon relative t o the ground if a horizontal w i n d is
# blowing at a speed of u.
################################################################
#                     # U s u a l l y we think of the resistance_
#    #####            # f o r c e as something that prevents the_
#  ## .   ##          # m o v e m e n t of a mbody, but here i t_
# #         #         # actually initiates t h e motion of t h e_
# #         #         # balloon. B y d e f i n i t i o n i t i s_
#  ##     ##          # proportional of the s q u a r e of t h e_
#    #####            # velocity r e l a t i v e t o the air and_
#     \|/             # directed opposite to it. So here w h e n_
#     +-+     <---- u # the initial velocity of the balloon is  _
#     +-+             # z e r o, i t s relative velocity will be_
#      .              # directed t o the ryte, so the force will_
#       .             # act to the left, and the balloon w i l l_
#         .           # start m o v i n g due t o the resistance_
#             .       # force. Of course t h e speed of the wind_
#                   . # must be l a r g e enough to overcome the_
####################### critical v a l u e of the friction force_
# between the r o p e and the ground, s o let's write the forces:
# F + N = mg, N = mg - F                                        _
# fₘₐₖₛ = μN = μ(mg - F)                                        _
# αu² ≥ μN = μ(mg - F), u ≥ √(μ(mg - F)/α)                      _
# When t h e balloon is moving with some velocity υ its relative_
# v  e  l  o  c  i  t  y will be u - υ, a n d w  e  '  l  l have:
# α(u - υ)² = μ(mg - F), zo υ = u - √(μ(mg - F)/α) «            _ 
################################################################
################################################################
################################################################
################################################################
################################################################
# 40. There are n balls in a jar, labeled with the n u m b e r s
# 1, 2, ..., n. A total of k balls are drawn, one by one w i t h
# replacement, to obtain a sequence of numbers.
# (a) W h a t is the probability that t h e sequence obtained is
#     strictly increasing?
#
#     The total number of samples is n**k, the number of ordered
#     samples of s i z e k is simply C(n,k), so: P = C(n,k)/n**k
#
# (b) W h a t is the probability that t h e sequence obtained is
#     increasing (but n o t necessarily strictly increasing, i.e.,
#     there can be repetitions)?
#     
#     This looks m o r e difficult but again we can think of the 
#     number of solutions to the equation:
#     x1 + x2 + ... + xn = k, where xj reperesents the number of
#     j's in the sample for example:
#     1 + 0 + 0 + 2 + 1 = 4 will correspond t o 1445, the number
#     of t h e s e s o l u t i o n s is C(n + k - 1, n - 1), z o
#     P = C(n + k - 1, n - 1)/n**k
################################################################
################################################################
################################################################
################################################################
if __name__=='__main__':########################################
    test_cases=int(input())#####################################
    for cases in range(test_cases):#############################
        k=int(input())##########################################
        arr=list(map(int,input().strip().split()))##############
        ob=Solution()###########################################
        res=ob.countSubarrays(arr,k)############################
        print(res)##############################################
################################################################
################################################################
################################################################
################################################################
# Exercise 1.3.4. Let A₁, A₂, A₃, .. be a collection of nonempty
# sets, each of which is bounded above.
# (a) Find a formula for sup A₁ ∪ A₂. Extend this to
#     sup A₁ ∪ A₂ ∪ ... ∪ Aₙ
#     It's kind of an obvious that:
#     sup A₁ ∪ A₂ ∪ ... ∪ Aₙ = max{ sup Aⱼ, 1 ≤ j ≤ n }
# (b) Consider sup A₁ ∪ A₂ ∪ .. . Does the formula in (a) extend
#     to the infinite case?
#     Here the problem is that the set A₁ ∪ A₂ ∪ .. might not be
#     bounded above, so it will not have a sup
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
# Test Cases Passed:                                 1111 / 1111
# Points Scored:                                           4 / 4
# Your Total Score:                                         1910 
# Time Taken:                                               0.12
################################################################
################################################################
################################################################
################################################################
################################################################
