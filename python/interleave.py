################################################################
################################################################
################################################################
################################################################
####### |||||||||@@@@||||@@||||||@@||||||@@||||||@@||||| #######
####### |||||||||||@@||||||@@||@@||||||@@||||||@@||||||| #######
####### |||||||||||@@@@||||||@@||||||@@||||||@@||||||||| #######
####### |||||||||||@@||@@||@@||@@||@@||||||@@||||||||||| #######
####### |||||||||||@@||||  ||||||  ||||||  ||||||||||||| #######
####### |||||||||||@@||  ||@@||  ||@@||  ||||||||||||||| #######
####### |||||||||||@@  ||||||  ||||||  ||||||||||||||||| #######
####### |||||||||||  ||||||@@||  ||  ||@@||||||||||||||@ #######
####### |||||||||  @@||||  ||||||  ||||||  ||||||||||@@| #######
####### |||||||  ||@@||  ||||||  ||@@||||||  ||||||@@||| #######
####### @@@@@  @@@@@@  @@@@@@                  @@@@@@@@@ #######
####### |||@@||||||  ||||||@@||||||||||@@||||||  ||||||| #######
####### @@@@@@@@@    @@@@@@@@@@                @@  @@@@@ #######
####### @||||||  ||  ||@@||||    ||||||||||  ||||||@@||| #######
####### |||||  ||||  @@||||  ||||  ||||||  ||@@||||||@@| #######
####### |||@@||||||  ||||  ||||||||  ||  ||||||@@||||||@ #######
####### |@@||||||@@  ||@@||||||||||||  ||||||||||@@||||| #######
####### @||||||@@||  @@||||||||||||  ||  ||||||||||@@||| #######
####### |||||@@||||  ||||||||||||  ||||||  ||||||||||@@| #######
####### |||@@||||@@  ||||||||||  ||||||||||  ||||||||||@ #######
####### |@@||||@@||  ||||||||  ||||||||||||||  ||||||||| #######
####### @||||@@||||@@||||||@@||||||||||||||||||@@||||||| #######
####### |||@@||||||@@||||@@||||||||||||||||||||||@@||||| #######
####### |@@||||||||@@||@@||||||||||||||||||||||||||@@||| #######
################################################################
################################################################
####### 088, 後、go, ご
################################################################
# Interleave the First Half of the Queue with Second Half
################################################################
################################################################
################################################################
################################################################
# You are given a queue Q of N integers of even length, 
# rearrange the elements by interleaving the first half of the
# queue with the second half of the queue.
################################################################
################################################################
################################################################
################################################################
# Input: N = 8, Q = { 1, 2, 3, 4, 5, 6, 7, 8 }
# Output:{ 1, 5, 2, 6, 3, 7, 4, 8 }
# Explanation: { 1,    2,    3,    4,   }
#              {    5,    6,    7,    8 }
################################################################
# Expected Time Complexity: O(N)
# Expected Auxiliary Space: O(N)
################################################################
# 2 <= N <= 10^5
# N is even
# 1 <= Elements of Queue <= 10^3
# Sum of N over all test cases doesn't exceeds 10^6
################################################################
################################################################
################################################################
#### .. durch die Körpermittelachse halbierten Quadrates 
#### gelbliche Tönung mit den Fingerspitzen an.
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
class Solution:
    def rearrangeQueue( self, n, q ):
        p = []
        n >>= 1
        while n:
            p.append( q.pop())
            n -= 1
        q.reverse()
        r = []
        while q:
            r.append( q.pop())
            r.append( p.pop())
        return r
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
class IntArray: ################################################
    def Input(self,n): #########################################
        arr=[int(i) for i in input().strip().split()] ##########
        return arr #############################################
    def Print(self,arr): #######################################
        for i in arr: ##########################################
            print(i,end=" ") ###################################
        print() ################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
if __name__=="__main__": #######################################
    t=int(input()) #############################################
    for _ in range(t): #########################################
        N=int(input()) #########################################
        q=IntArray().Input(N) ##################################
        obj=Solution() #########################################
        res=obj.rearrangeQueue(N,q) ############################
        IntArray().Print(res) ##################################
################################################################
################################################################
################################################################
################################################################
################################################################
#### teishoku, ていしょく - set meal; special (of the day)
#### supaggetei, スパゲッテイ - spaghetti
#### karei, カレー - curry
#### soba, そば - buckwheat noodles
#### udon, うどん - wheat noodles
#### sendoichchi, センドイッチ - sandwich
#### aisukuriimu, アイスクリーム - ice cream
#### koora, コーラ - cola
#### sarada, サラダ - salad
#### koocha, こうちゃ - black tea
#### juusu, ジュース - juice
#### miruku, ミルク - milk
################################################################
################################################################
# Test Cases Passed:                             101020 / 101020
# Total Points Scored:                                     4 / 4
# Your Total Score:                                         1650
# Total Time Taken:                                          1.4
