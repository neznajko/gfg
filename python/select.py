########################################################
########################################################
########################################################
#######################      ###########################
#####################         ##########################
#######################        #########################
########################       #########################
#########################      #########################
#########################      #########################
##########################     ############ ############
######||||||||||||||||||##     #########################
######|||||       ||||||##     ######### ###############
######|| ||||       ||||##     ######## ################
######||||||||       |||##     ######## ################
######|||||||||      |||##     #######   ###############
######|||||||||     ||||##    ########    ##############
######||||||||     |||||##    ########     #############
######|||||||    |||||||##    #########      ###########
######|||||   ||||||||||##    ##########       #########
########  ####### small ###   ###########        #######
##### #####################   #############         ####
############################  ##############       #####
############################# ################   #######
############################## #########################
########################################################
################################ #######################
########################################################
########################################################
# Select Nodes, 小｜ショウ
########################################################
# Given N nodes of a tree and a list of edges. Find the
# minimum number of nodes to be selected to light up all
# the edges of the tree.
########################################################
# An edge lights up when at least one node at the end of
# the edge is selected.
########################################################
# Input: N = 6
#        edges[] = {(1,2), (1,3), (2,4), (3,5), (3,6)}
# Output: 2
# Explanation: Selecting nodes 2 and 3 lights up all the
# edges.
########################################################
# Input: N = 3
#        edges[] = {(1,2), (1,3)}
# Output: 1
# Explanation: Selecting Node 1 lights up all the edges.
########################################################
# Expected Time Complexity: O(N)
# Expected Auxiliary Space: O(N)
########################################################
# 1 ≤ N ≤ 10^5
# 1 ≤ edges ≤ N
# Given graph is a valid tree.
########################################################
########################################################
########################################################
########################################################
########################################################
# Die the linke left Figur figure ist is entstanden
# originated aus from der the horozontalen horizontal
# parallelen parallels Achsen_abstände axis_distance 
# der of the Höhen_gliederung height_struture ..
########################################################
########################################################
########################################################
# * 1----2 + 6---3---1---2 1.adj = [2,3]   |   |   '
# * 1----3 '     |       | 2.adj = [1,4]   |   |   '  
# + 2----4 ,     5       4 3.adj = [1,5,6] |   |   '
# ' 3----5 _               4.adj = [2]     |   |   '  
# ' 3----6 %               5.adj = [3]     |   |   '  
#                          6.adj = [3]     |   |   '  
########################################################
# Mittag                                          midday
########################################################
# Mitternacht                                   midnight
########################################################
# morgens                                 in the morning
########################################################
# abends                                  in the evening
########################################################
# um                                                  at
########################################################
# aufstehen                                    to get up
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
OFF, ON = 0, 1
class Solution:
    ###
    def l( self, u ):
        if self.cache[u]: return self.cache[u]
        self.vztd[u] = True
        # fyorst turn off u
        off = 0
        for v in self.adj[u]:
            if not self.vztd[v]:
                off += self.l( v )[ ON ]
        # turn on
        on = 1
        for v in self.adj[u]:
            if not self.vztd[v]:
                on += min( self.l( v ))
        self.cache[u] = [ off, on ]
        self.vztd[u] = False
        return self.cache[u]
    ###
    def cons( self, n, edges ):
        self.adj =     [[] for _ in range(n + 1)]
        self.vztd = [False for _ in range(n + 1)]
        self.cache = [None for _ in range(n + 1)]
        for u, v in edges:
            self.adj[u].append( v )
            self.adj[v].append( u )
    ###        
    def countVertex( self, n, edges ):
        self.cons( n, edges )
        c = self.l( 1 )
        return min( c )
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
#### Tomorrow is January 3rd.
#### ahista wa ichigatsu mitsuka desu.
#### あした｜は｜一月｜みつ日｜です。
#### ashita    - tomorrow            - あした
#### ichigatsu _ January             - いちがつ｜一月
#### mitsuka   , thyord day of month _ みつか｜みつ日
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
if __name__=='__main__':################################
    t=int(input())######################################
    for _ in range(t):##################################
        N=int(input())##################################
        edges=[]########################################
        for _ in range(N-1):############################
            arr=list(map(int,input().split()))##########
            edges.append(arr)###########################
        ob=Solution()###################################
        print(ob.countVertex(N,edges))##################
########################################################
########################################################
# たけしさん｜にほんじん｜です。
# みちこさんも｜にしょんじん｜です。
#（Ｘは）Ｙ じゃないです。
#（Ｘは）Ｙ じゃありません。
#（Ｘは）Ｙ ではありません。
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
########################################################
# Test Cases Passed:                           113 / 113
# Total Points Scored:                             8 / 8
# Your Total Score:                                 1510
# Total Time Taken:                                 0.46
