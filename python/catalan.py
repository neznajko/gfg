#                 `.
#               `   `. 
#             `       `.
#           `        . 
#         `        .
#       `        .  .  .  .  .  .  .  .  .  .  .                
#     ` //////////////////////////////////////.
#   `. //////////////////////////////////////.
#     `.   .  .  .  .  .  .  .  .  .  .  .  . 
#       `.             =======  ________________________________ 
#                      =======  ________________________________ 矢 
#      ||||||||||||||||=======||||||||||||||||  ________________ 
#      ||||||||||||||||=======||||||||||||||||  ________________ Pfeil 
#                      =======  ________________________________ 
#                      =======  ________________________________ flèChE 
#                     #=======-  _______________________________ 
#                 ######=====------  ___________________________ や 
#            ############===------------  ______________________ 
#      ################### -------------------  ________________ flecha
#      ###############         ---------------  ________________
#      #######                         -------  ________________ freccia
#
################################################################
# Nth catalan number
################################################################
# Given a number N. The task is to find the Nth catalan number.
# The first few Catalan numbers for N = 0, 1, 2, 3, .. are
# 1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862, .. Catalan Number
# for N is equal to the number of expressions containing N
# pairs of paranthesis that are correct matched, i.e., for each
# of the N '(' there exist N ')' on there right and vice versa.
# Since answer can be huge return answer modulo 1e9+7
################################################################
# Input: N = 5
# Output: 42
################################################################
# Expected Time Complexity: O(N^2)
# Expected Auxiliary Space: O(N)
################################################################
# 1 <= N <= 10^3
################################################################
################################################################
################################################################
################################################################
################################################################
# : 0 => 1
################################################################
# 0 1: 2 => 1
# ( ) = 0 * 0 = 1
################################################################
# 0 1 2 3: 4 => 1 + 1 = 2
# (     ) = 2 * 0 = 1
# ( )     = 0 * 2 = 1
################################################################
# 0 1 2 3 4 5: 6 => 2 + 1 + 2 = 5
# (         )  = 4 * 0 = 2
# (     )      = 2 * 2 = 1
# ( )          = 0 * 4 = 2
################################################################
# 0 1 2 3 4 5 6 7: 8 => 5 + 2 + 2 + 5 = 14
# (             ) = 6 * 0 = 5
# (         )     = 4 * 2 = 2
# (     )         = 2 * 4 = 2
# ( )             = 0 * 6 = 5
################################################################
# 0 1 2 3 4 5 6 7 8 9: 10 => 14 + 5 + 4 + 5 + 14 = 42
# (                 ) = 8 * 0 = 14
# (             )     = 6 * 2 = 5 * 1 = 5
# (         )         = 4 * 4 = 2 * 2 = 4
# (     )             = 2 * 6 = 5
# ( )                 = 0 * 8 = 14
################################################################
# 0 1 2 3 4 5 6 7 8 9 10 11: 12 => 132
# (                       ) = 10 * 0 = 42
# (                 )       = 8 * 2 = 14
# (             )           = 6 * 4 = 10
# (         )               = 4 * 6 = 10
# (     )                   = 2 * 8 = 14
# ( )                       = 0 * 10 = 42
################################################################
# c( n ) = sum( c( n - 1 - j ) * c( j )) for j = 0..( n - 1 )
################################################################
################################################################
MAXN = 1000
MOD = 1000000007
CATALAN = [ 0 ] * ( MAXN + 1 )
CATALAN[ 0 ] = 1
SP = 1
################################################################
################################################################
################################################################
################################################################
################################################################
class Solution:
    def findCatalan( self, n ):
        global SP
        while SP <= n:
            for j in range( SP ):
                CATALAN[ SP ] += ( CATALAN[ SP - 1 - j ] *
                                   CATALAN[ j ])
                CATALAN[ SP ] %= MOD
            SP += 1
        return CATALAN[ n ];
################################################################
if __name__=="__main__": #######################################
    t=int(input()) #############################################
    for _ in range(t): #########################################
        n=int(input()) #########################################
        obj=Solution() #########################################
        res=obj.findCatalan(n) #################################
        print(res) #############################################
################################################################
# Test Cases Passed:                                 1120 / 1120
# Points Scored:                                           4 / 4
# Your Total Score:                                         1734 
# Time Taken:                                               0.19
# Q:                                Is there order in the chaos?
# A:                           Yep, that's what the fractals are
# npuTekaBaGKu e7eKTpoHHa BuHeTKa:  HuKora HsMa ga ce 4yBcTByBaE
#                                         ce EgHo cu s7 nogMeTKa
