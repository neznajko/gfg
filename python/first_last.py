################################################################
# First and last occurrences of x
################################################################
# Given a sorted array arr containing n elements with possibly
# duplicate the task is to find indexes of first elements, and
# last occurrences of an element x in the given array.
# Note: If the number x is not found in the array then return
# both the indices as -1.
################################################################
# Input: n = 9, x = 5, arr[] = { 1, 3, 5, 5, 5, 5, 67, 123, 125 }
# Output: 2 5
################################################################
# Input: n = 9, x = 7, arr[] = { 1, 3, 5, 5, 5, 5, 7, 123, 125 }
# Output: 6 6
################################################################
# Expected Time Complexity: O( log N )
# Expected Auxiliary Space: O( 1     )
################################################################
#############===============================####################
############ ############################### ###################
############ ############################### ###################
############ #######  ##########  ########## ###################
############ #######  ########  ##  ######## ###################
############ #######  ######  ######  ###### ###################
############ ####        #  #        #  #### ###################
############ #######  ##########  ########## ###################
############ #######  #####            ##### ###################
############ ######     ### ########## ##### ###################
############ #####    #  ##            ##### ###################
############ ####  #  ##########  ########## ###################
############ #######  #########    ######### ###################
############ #######  ########  ##  ######## ###################
############ #######  ######  ######  ###### ###################
############ ############################### ###################
############ ############################### ###################
#############===============================####################
################################################################
################################################################
################################################################
################################################################
################################################################
#
#                                                   バイナリ検索
#
#
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
def find_first( a, n, x ):
    l = 0
    u = n - 1
    res = -1
    while l <= u:
        m = ( l + u )// 2
        if a[m] < x:
            l = m + 1
        elif a[m] > x:
            u = m - 1
        else:
            res = m
            u = m - 1
    return res
################################################################
################################################################
################################################################
################################################################
def find_last( a, n, x ):
    l = 0
    u = n - 1
    res = -1
    while l <= u:
        m = ( l + u )// 2
        if a[m] < x:
            l = m + 1
        elif a[m] > x:
            u = m - 1
        else:
            res = m
            l = m + 1
    return res
################################################################
################################################################
################################################################
################################################################    
def find( a, n, x ):
    return [ find_first( a, n, x ), find_last( a, n, x )]
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
t=int(input())##################################################
for _ in range(0,t):############################################
    l=list(map(int,input().split()))############################
    n=l[0]######################################################
    x=l[1]######################################################
    arr=list(map(int,input().split()))##########################
    ans=find(arr,n,x)###########################################
    print(*ans)#################################################
################################################################
# Test Cases Passed:                                 1120 / 1120
# Total Points Scored:                                     4 / 4
# Your Total Score:                                         1226
# Total Time Taken:                                         0.28
