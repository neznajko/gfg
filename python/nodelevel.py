######################|||||||||||||||||||#####""########
######################||||||||||||||||||#####"""########
######################|||||||||||||||||#####""""########
######################||||||||||||||||#####"""""########
######################|||||||||||||||#####""""""########
######################||||||||||||||#####"""""""########
######################|||||||||||||#####""""""""########
######################||||||||||||     """""""""########
################                                      ##
################ w  ##||||||||||     ///////////####  ##
################ o  ##|||||||||     ////////////####  ##
################ m  ##||||||||     /////////////####  ##
################ a  ##|||||||     //////////////####  ##
################ n  ##||||||     ////////////     ##  ##
################                                      ## 
##################  ######     #############     ###  ##
##################  #####     #############     ####  ##
##################  ####     #############     :####  ##
##################  #######     ########     :::####  ##
##################  ##########     ###     :::::####  ##
##################  #############        :::::::####  ##
##################  #############        :::::::####  ##
##################  #########     #####     ::::####  ##
##################  #####     ############     :####  ##
##################       ####################     ##  ##
# 女、おんあ
################################################################
################################################################
################################################################
################################################################
# Level of Nodes                                              
################################################################
# Given an integer X and an undirected acyclic graph with V nodes,
# labeled from 0 to V-1, and E edges, find the level of node labeled
# as X. Level is the minimum number of edges you must travel from the
# node 0 to some target. If there doesn't exists such a node that is
# labeled as X, return -1.                              
################################################################
# Input: 0           Level 0                            
#     1     2              1                            
#    3 4     5             2                            
#        X = 4                                          
# Output: 2                                             
# Explanation: We can clearly see that Node 4 lies at Level 2.
################################################################
# Expected Time Complexity: O(V)                        
# Expected Auxiliary Space: O(V)                        
################################################################
# 2 ≤ V ≤ 10^4                                          
# 1 ≤ E ≤ 10^4                                          
# 0 ≤ adj i,j < V                                       
# 1 ≤ X < V                                             
# Graph doesn't contain multiple edges and self loops.  
################################################################
################################################################
# haben haben haben haben haben haben haben haben haben  to have
# ich   habe  ich   habe  ich   habe  ich   habe          I have
# du    hast  du    hast  du    hast  du    hast        you have
# er/sie/es   hat   er/sie/es   hat                he/she/it has
# wir   haben wir   haben wir   haben wir   haben        we have
# ihr   habt  ihr   habt  ihr   habt  ihr   habt        you have
# Sie   haben Sie   haben Sie   haben Sie   haben       you have
# sie   haben sie   haben sie   haben sie   haben      they have
################################################################
# D g E d S i d K
# i r n e t n e ö
# e o t r r n s r
#   ß s   e e   p
#   e p   c r   e
#   n r   k h   r
#     e   e a   g
#     c   n l   a
#     h     b   n
#     u         z
#     n         e
#     g         n
#     e         .
#     n
from collections import deque        
################################################################
################################################################
class Solution:
    def nodeLevel( self, V, adj, X ):
        levl = 0
        tag = [False]*V
        deq = deque([0])
        while deq:
            n = len( deq )
            for _ in range( n ):
                u = deq.popleft()
                if u == X: return levl
                tag[u] = True
                for v in adj[u]:
                    if tag[v]: continue
                    deq.append( v )            
            levl += 1
        return -1
########################################################
if __name__ == '__main__':##############################
    t = int(input())####################################
    for i in range(t):##################################
        V,E = list(map(int, input().strip().split()))###
        adj = [[] for i in range(V)]####################
        for i in range(E):##############################
            a,b = map(int,input().strip().split())######
            adj[a].append(b)############################
            adj[b].append(a)############################
        X=int(input())##################################
        ob = Solution()#################################
        print(ob.nodeLevel(V, adj, X))##################
########################################################
########################################################
########################################################
########################################################
#（１）ご「５」（２）ぜろ「０」（３）きゅう「９」
#（４）さん「３」（５）なな「７」（６）に「２」
#（７）ろく「６」（８）いち「１」（９）はち「８」
#（１０）よん「４」（１１）じゅうろく「１６」
#（１２）よんじゅう「４０」（１３）にじゅういち「２１」
#（１４）ひゃくろくじゅうよん「１６４」
#（１５）きゅうじゅうに「９２」（１６）さんじゅうご「３５」
#（１７）ななじゅうろく「７６」（１８）じゅうはち「１８」
#（１９）ひゃくごじゅうなな「１５７」（２０）ひゃくいち「１０１」
########################################################
########################################################
########################################################
# Test Cases Passed:                         1115 / 1115
# Total Points Scored:                             4 / 4
# Your Total Score:                                 1398
# Total Time Taken:                                 0.17
