################################################################
# Array Pair Sum Divisibility Problem                       ==== 
################################################################
# Given an array of integers and a number k, write a function that
# returns true if given array can be divided into pairs such that
# sum of every pair is divisible by k.
################################################################
# Input: arr = [9, 5, 7, 3], k = 6
# Output: True
# Explanation: {(9, 3), (5, 7)} is a possible solution. 9 + 3 = 12
# is divisible by 6 and 7 + 5 = 12 is also divisible by 6.
################################################################
# Input: arr = [2, 4, 1, 3], k = 4                            --
# Output: False                                               --
# Explanation: There is no possible solution.                 --
################################################################
# Expected Time Complexity: O(n)                               _
# Expected Space Complexity: O(n)                              _
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
###########   r . . . . . k .   ##### This is a postion from one
###########   . b . n . . r .   ## chess book, it is from a game
###########   p . . . n . . q   ## between Capablanca and Watson 
###########   . p . p P R N .   ## don't know if he was a doctor
###########   . . p P . . . P   ################################
###########   . . P . . . P .   ################################
###########   P P B Q . . . .   ################################
###########   . . . . . R . K   ################################ 
################################################################
########### White to moooooooov ################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
###############################################################=
class Solution:
    """"""
    def canPair( self, nums, k ):
        ''''''
        cntr = [0] * k
        
        for num in nums:
            cntr[ num % k ] += 1
        
        for num in nums:
            num %= k
            cmp = ( k - num ) % k # complementary
            if num == cmp: cntr[ num ] -= 1
            if not cntr[ cmp ]: return False
            cntr[ cmp ] -= 1
            
        return True

################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
###############################################################=
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
################################################################
if __name__=='__main__':                   #####################
    T=int(input())                         #####################
    for i in range(T):                     #####################
        n,k=input().split()                #####################
        n=int(n)                           #####################
        k=int(k)                           #####################
        nums=list(map(int,input().split()))#####################
        ob=Solution()                      #####################
        ans=ob.canPair(nums,k)             #####################
        if(ans):print("True")              #####################
        else:print("False")                #####################
################################################################
################################################################
################################################################
###############################################################=
# Test Cases Passed:                                   167 / 167
# Total Points Scored:                                     4 / 4
# Your Total Score:                                         1186
# Total Time Taken:                                         0.19
