////////////////////////////////////////////////////////////////
//
//
//
//     wegfegen    払
//#############    #############################################
//#############    #############    ############################
//#############    ############    ############################# 
//#####                #######    ############################## 
//#############    ##########    ############################### 
//#############    #########    ################################
//#############        ####    ################################# 
//#############    #######    ##########    ####################
//#########        ######    ############    ###################
//#####    ####    #####                      ##################
//#############    ########################    #################
//#############    #############################################
//      bAlAYER    ばらい
//
//
//
////////////////////////////////////////////////////////////////
// Maximum Index
////////////////////////////////////////////////////////////////
// Given an array a of n positive integers. The task i s to find
// the maximum of j-i subjected to the constraint of a[i] ≤ a[j]
// and i ≤ j
////////////////////////////////////////////////////////////////
// Input: n = 9 a[] = {34, 8, 10, 3, 2, 80, 30, 33, 1}
// Output: 6
// Explanation: I n the given array a[1] < a[7] satisfying t h e
// required condition (a[i] < a[j]) thus g i v i n g the maximum
// difference of j - i which is 6 (7 - 1)
////////////////////////////////////////////////////////////////
// Expected Time Complexity: O(N)
// Expected Auxiliary Space: O(N)
////////////////////////////////////////////////////////////////
// 1 ≤ n ≤ 10^6
// 0 ≤ a[i] ≤ 10^9
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
import java.io                                               .*;
import java.util                                             .*;
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
class Main { public static void main ( String [  ] args ) throws 
IOException  {  BufferedReader  br  =  new BufferedReader (  new 
InputStreamReader(System.in));int t=Integer.parseInt(br.readLine
().trim());while(t-->0){ int n = Integer.parseInt( br.readLine()
.trim()); int arr[]=new int[n]; String inputLine[]=br.readLine()
.trim().split(" ");for(int i=0;i<n;i++){arr[i]=Integer.parseInt(
inputLine[i]);}Solution ob=new Solution();System.out.println(ob.
maxIndexDiff(arr,n));}}}                                      /*
 982 997 581 468 869 718 660 556 032 641 836 161 941 836 035 541
   0   1   2   3   4   5   6   7   8   9   a   b   c   d   e   f
             i                                                 j
 stk = [ 0 2 3 7 8 0 0 0 0 0 0 0 0 0 0 0 ], m = f - 3
                 T                                            */
////////////////////////////////////////////////////////////////
class Solution {
     int maxIndexDiff( int a[], int n ){
         int stk[] = new int[ n ];
         int T = 0;
         stk[ T ] = 0;
         int m = 0;
         //
         for( int j = T + 1; j < n; ++j ){
             if( a[ j ] < a[ stk[ T ]]){
                 stk[ ++T ] = j;                 
             } else {
                 int i = 0;
                 for(; a[ stk[ i ]] > a[ j ]; ++i )
                     ;
                 m = Math.max( m, j - stk[ i ]);
             }
         }
         return m;
    }
}
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Test Cases Passed:                                1121 / 1121
// Points Scored:                                          4 / 4
// Your Total Score:                                        1714 
// Time Taken:                                              0.77
