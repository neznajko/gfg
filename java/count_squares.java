////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////                                ////////////////88888888888888888888888888888888
////////////////                                ////////////////888888    8888    88888    88888
////////////////                                ////////////////8888888    8888    888    888888
////////////////                                ////////////////88888888888888888888888888888888
////////////////                                ////////////////888                           88
////////////////                                ////////////////88    888``````````````88    888
////////////////                                ////////////////8888888888888888    888888888888
////////////////                                ////////////////88888888888888    88888888888888
////////////////                                ////////////////8888                        8888
////////////////                                ////////////////88888888888888    88888888888888
////////////////                                ////////////////88888888888888    88888888888888
////////////////                                ////////////////88888888888888    88888888888888
////////////////                                ////////////////88888888888888    88888888888888
////////////////                                ////////////////8888888888888   8888888888888888
////////////////                   s t u d y    ////////////////88888888888  8888888888888888888
////////////////                                ////////////////88888888888888888888888888888888
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Count Square Submatrices with All Ones,                      学、
////////////////////////////////////////////////////////////////
// Given a N*M matrix of ones and zeros, return how many square
// submatrices have all ones.
////////////////////////////////////////////////////////////////
// Input: N = 3 M = 4 matrix = [[0, 1, 1, 1], Output: 15
//                              [1, 1, 1, 1], 
// Explanation:                 [0, 1, 1, 1]]
// There are 10 squares of side 1.
// There are 4 squares of side 2.
// There are 1 squares of side 3.
// Total number of squares = 10 + 4 + 1 = 15
//////////////////////////////////////////////////////////////// 
// Input: N = 3 M = 3 matrix =[[1, 0, 1], Output: 7
//                             [1, 1, 0], 
// Explanation:                [1, 1, 0]] 
// There are 6 squares of side 1.
// There are 1 squares of side 2.
// Total number of squares = 6 + 1 = 7
////////////////////////////////////////////////////////////////
// Expected Time Complexity: O(NM)
// Expected Auxiliary Space: O(1)
////////////////////////////////////////////////////////////////
// 1 ≤ N,M ≤ 3*10^3
// 0 ≤ matrix[i][j] ≤ 1
////////////////////////////////////////////////////////////////
/////////////   ///   //////   ///////   ///////////////////////
///////////// l /// b ////// e /////// t ///////////////////////  
//////   //// a /// r ////// x ///   / o ////   ////////////////
////// t //// r /// e ////// t /// f /   //// h ////////////////   
////   h      g     a        e     r   r      i             
//// Die größte BreitenAusdehnung von RollHügel zu Rollhügel
////          s     h        s     m   l      l FO TROCHANTE
//// t        t        u     i         l      q  R         R
//// o          s      n     o   f            u                 
////            c      t     n   u    b       a                 
//// mißt ein knappes bis ein volles KörperViertel.
//// e    A     r      l  A      l    d       t
//// a          c                     y       e
//// s          e                             r
//// u       
//// r                                                          
//// e                                                          
////           oo                                             ::
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
//////////////////////y/////////////////////////////////////////
/////////////////////b//////////////////////////////////////////
////////////////////b///////////////////////////////////////////
import java.util.* ; 
import java.io.*  ;
/////////////////o//////////////////////////////////////////////
//              H                  y a l p   o t   n e l \ i p s
//  g                                                    / 
//  e         s                                          \
//  h        a                 ts                        /
//  e       d                ir                          \
//  n                      kc                            /
//      sch              ne              sport           \
//  t      wim                      port                 /
//  o         men    ot        der S                     \
//                 k                                     e
//  g            in to
//  o           t      swi
//                        m
////////////////////////////////////////////////////////////////
// football  *der Fußball*  football  *der Fußball*  football  *
////////////////////////////////////////////////////////////////
class  GFG  { public static void main ( String args [ ] ) throws 
IOException  {  Scanner sc = new Scanner ( System.in ) ; int t = 
sc.nextInt(); while ( t-- > 0 ) { int N = sc.nextInt (); int M = 
sc.nextInt(); int[][] mat = new int[N][M]; for(int i = 0; i < N;
i++) { for (int j = 0; j < M; j++) { mat[i][j] = sc.nextInt();}}
Solution obj = new Solution(); int res = obj.countSquares( N, M, 
mat); System.out.println(res);}}}///////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
class Solution {
    int n;
    int m;
    int mat[][];        
    void setup( int n, int m, int mat[][]){
        this.n = n;
        this.m = m;
        this.mat = mat;
    }
    void debug(){
        for( int i = 0; i < n; ++i ){
            String s = "";
            for( int j = 0; j < m; ++j ){
                s += mat[i][j] + " ";
            }
            System.out.println( s );            
        }
        System.out.println();
    }
    int get_w( int i, int j ){
        int x = mat[i-1][j];
        if( x == 0 ) return 0;
        int y = mat[i][j-1];
        if( y == 0 ) return 0;
        int z = mat[i-1][j-1];
        if( z == 0 ) return 0;
        return Math.min( x, Math.min( y, z ));
    }
    public int countSquares( int n, int m, int mat[][]){
        setup( n, m, mat );
        int c = 0;
        for( int j = 0; j < m; ++j ){
            if( mat[0][j] == 1 ) ++c;
        }
        for( int i = 1; i < n; ++i ){
            if( mat[i][0] == 1 ) ++c;
        }
        for( int i = 1; i < n; ++i ){
            for( int j = 1; j < m; ++j ){
                if( mat[i][j] == 1 ){
                    mat[i][j] += get_w( i, j );
                    c += mat[i][j];
                }
            }
        }
        return c;
    }
}
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// 1. This is my pen. これは　わたしの　ペンです。
// 2. That is Ken's book. それは　けんさんの　ほんです。
// 3. What is that? あれは　なんですか。
// 4. Is this meat? これは　にくですか。
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Test Cases Passed:                              31146 / 31146
// Total Points Scored:                                    4 / 4
// Your Total Score:                                        1482
// Total Time Taken:                                        2.25
